@import '@taiga-ui/core/styles/taiga-ui-local';

:host {
    position: relative;
    display: block;
    inline-size: fit-content;
    min-inline-size: fit-content;
    font-size: 1rem;
    color: var(--tui-chart-categorical-12);
    cursor: pointer;
    user-select: none;

    &._readonly {
        pointer-events: none;
    }

    &._disabled {
        pointer-events: none;
        opacity: var(--tui-disabled-opacity);
    }
}

.t-range {
    .fullsize();

    opacity: 0;
    box-sizing: border-box;
    padding: 0 0.75em;
    pointer-events: none;

    &:focus-visible + .t-items {
        box-shadow: inset 0 0 0 0.125rem var(--tui-border-focus);
    }
}

.t-items {
    position: relative;
    display: flex;
    flex-direction: row-reverse;

    &:hover {
        .t-icon {
            clip-path: inset(0 0 0 0);

            &_blank {
                clip-path: inset(0 0 0 100%);
            }
        }
    }
}

.t-item {
    position: relative;
    flex: 1 0 0;
    color: var(--tui-text-tertiary);
    transition-property: color, transform;
    transition-duration: var(--tui-duration);
    transition-timing-function: ease-in-out, cubic-bezier(0.35, 1.5, 0.4, 2.5);

    &:first-child {
        max-inline-size: 2.5em;
    }

    &:hover,
    &:hover ~ &,
    .t-items:not(:hover) &_active {
        color: currentColor;
    }

    .t-items:active &:hover,
    .t-items:active &:hover ~ & {
        transform: scale(0.85);
        transition-duration: var(--tui-duration), calc(var(--tui-duration) / 3);
        transition-timing-function: ease-in-out;
    }
}

.t-icon {
    .transition(clip-path);

    inline-size: 2.5em;
    block-size: 2.5em;
    font-size: inherit;
    clip-path: inset(0 var(--t-cut) 0 0);

    :host-context([dir='rtl']) & {
        clip-path: inset(0 0 0 var(--t-cut));
    }

    ::ng-deep > * {
        font-size: 1rem;
    }

    &_blank {
        position: absolute;
        top: 0;
        left: 0;
        display: none;
        color: var(--tui-text-tertiary);
        clip-path: inset(0 0 0 var(--t-cut));

        :host-context([dir='rtl']) & {
            clip-path: inset(0 var(--t-cut) 0 0);
        }
    }

    &_fraction {
        display: block;
    }
}

@media (any-pointer: coarse) {
    :host._active {
        .t-item_active {
            transform: scale(0.85);
            transition-timing-function: ease-in-out;
        }
    }

    :host:not(._readonly) .t-range {
        pointer-events: auto;
    }

    .t-icon {
        transition: none;
    }
}
