@import '@taiga-ui/core/styles/taiga-ui-local';

:host {
    position: relative; // fix stacking context in Safari
    display: block;
    overflow: hidden;
    border-radius: var(--tui-radius-l);

    &[data-borders='top-bottom'] {
        // @bad TODO: find the better way to prevent radius in case
        // when accordion has rounded=true and item has top-bottom borders
        border-radius: 0 !important;
    }
}

::ng-deep tui-accordion {
    inline-size: 100%;
}

.t-wrapper {
    position: relative;
    border-radius: inherit;

    &::after {
        .fullsize();

        content: '';
        box-sizing: border-box;
        border-radius: inherit;
        border: 1px solid var(--tui-border-normal);
        pointer-events: none;

        :host:not([data-borders]) & {
            border-width: 0;
        }

        :host[data-borders='all'] & {
            border-width: 1px;
        }

        :host[data-borders='top-bottom'] & {
            border-inline-start-width: 0;
            border-inline-end-width: 0;
        }

        :host[data-borders='top'] & {
            border-inline-start-width: 0;
            border-inline-end-width: 0;
            border-block-end-width: 0;
        }

        :host[data-borders='bottom'] & {
            border-inline-start-width: 0;
            border-inline-end-width: 0;
            border-block-start-width: 0;
        }
    }
}

.t-header {
    .button-clear();
    .transition(background);

    display: flex;
    inline-size: 100%;
    font: var(--tui-font-text-l);
    align-items: center;
    box-sizing: border-box;
    border-block-end: 1px solid var(--tui-border-normal);
    min-block-size: var(--tui-height-l);
    padding: 0.75rem 1.25rem;
    color: var(--tui-text-primary);
    cursor: pointer;
    text-align: start;
    outline: none;

    &:focus-visible {
        box-shadow: inset 0 0 0 2px var(--tui-border-focus);
    }

    :host:not([data-borders]) & {
        border-block-end-width: 0;
    }

    :host._has-arrow & {
        padding-inline-end: 0.75rem;
    }

    :host-context([tuiTheme='dark']) &_open {
        background: var(--tui-background-neutral-1);
    }

    :host[data-size='s'] & {
        font: var(--tui-font-text-m);
        min-block-size: var(--tui-height-m);
        padding: 0.625rem 0.75rem 0.625rem 1rem;
    }

    :host._no-padding & {
        padding-inline-start: 0;
        padding-inline-end: 0;
    }

    :host._disabled & {
        cursor: default;
    }

    &_hoverable {
        .t-wrapper:hover > & {
            background: var(--tui-background-base-alt);
        }
    }
}

.t-title {
    .text-overflow();

    margin-inline-end: 0;
    flex-grow: 1;

    :host._has-arrow & {
        margin-inline-end: 0.5rem;
    }
}

.t-icon {
    .transition(color);

    margin-inline-start: auto;
    color: var(--tui-text-tertiary);

    &::after {
        font-size: 1rem;
    }

    :host:hover & {
        color: var(--tui-text-secondary);
    }
}

.t-content {
    font: var(--tui-font-text-m);
    padding: 1.25rem;
    overflow-wrap: break-word;

    :host[data-size='s'] & {
        font: var(--tui-font-text-s);
        padding: 1rem;
    }
}
