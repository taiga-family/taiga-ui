@import '@taiga-ui/core/styles/taiga-ui-local';

@track-height: 0.125rem;
@extra-click-area-space: 0.4375rem;
@tick-thickness: 0.25rem;

@thumb-shift: 1px;

:host {
    position: relative;
    display: block;
    block-size: @track-height;
    border-radius: var(--tui-radius-m);
    background: var(--tui-border-normal);
    cursor: pointer;
    outline: none;
    margin: @extra-click-area-space 0;
    touch-action: pan-x;

    &:active {
        cursor: ew-resize;
    }

    &::after {
        content: '';
        position: absolute;
        top: -@extra-click-area-space;
        bottom: -@extra-click-area-space;
        inline-size: 100%;
    }

    &._disabled {
        opacity: var(--tui-disabled-opacity);
        pointer-events: none;
    }
}

.track(@thumb-width) {
    position: relative;
    margin: 0 (@thumb-width / 2);
    block-size: 100%;

    /* Filled selected range */
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: ~'max(calc(var(--t-start) - 1px), 1px)';
        right: ~'max(var(--t-end), 1px)';
        inset-inline-start: ~'max(calc(var(--t-start) - 1px), 1px)';
        inset-inline-end: ~'max(var(--t-end), 1px)';
        block-size: 100%;
        background: var(--tui-background-accent-1);
        margin: 0 calc(-@thumb-width / 2);
    }

    /* Ticks */
    &::after {
        .fullsize(absolute, inset);

        content: '';
        left: ((@thumb-width - @tick-thickness) / 2);
        right: ((@thumb-width + @tick-thickness) / 2);
        inset-inline-start: ((@thumb-width - @tick-thickness) / 2);
        inset-inline-end: ((@thumb-width + @tick-thickness) / 2);
        background-image: repeating-linear-gradient(
            to var(--tui-inline-end),
            var(--tui-text-tertiary) 0 @tick-thickness,
            transparent 0 calc(var(--t-segment-width) / var(--t-bg-size-ratio))
        );
        background-position-x: var(--tui-inline-end);
        background-repeat: no-repeat;
        background-size: calc(100% * var(--t-bg-size-ratio));
    }
}

.t-track {
    :host[data-size='s'] & {
        .track(@thumb-diameters[@s]);
    }

    :host[data-size='m'] & {
        .track(@thumb-diameters[@m]);
    }
}

.ignore-track-pointer-events() {
    pointer-events: none;

    &::-webkit-slider-thumb {
        pointer-events: auto;
    }

    &::-moz-range-thumb {
        pointer-events: auto;
    }

    :host._disabled & {
        &::-webkit-slider-thumb {
            pointer-events: none;
        }

        &::-moz-range-thumb {
            pointer-events: none;
        }
    }
}

.remove-track-background() {
    /* Artificially increased specificity */
    input[type='range']& {
        &::-webkit-slider-runnable-track {
            background: transparent;
        }

        &::-moz-range-track {
            background: transparent;
        }

        &::-moz-range-progress {
            background: transparent;
        }
    }
}

.t-thumb {
    .ignore-track-pointer-events();
    .remove-track-background();

    position: absolute;
    top: (@track-height / 2);
    left: 0;
    right: 0;
    z-index: 1;
    transform: translateY(-50%);

    &:first-of-type {
        --tui-slider-thumb-transform: translateX(calc(var(--tui-inline) * -50%))
            translateX(calc(var(--tui-inline) * -@thumb-shift));
    }

    &:last-of-type {
        --tui-slider-thumb-transform: translateX(calc(var(--tui-inline) * 50%))
            translateX(calc(var(--tui-inline) * @thumb-shift));
    }

    :host._disabled & {
        opacity: 1; // prevent double overlay for disabled state
    }
}
