@import '@taiga-ui/core/styles/taiga-ui-local';
@import '@taiga-ui/legacy/styles/taiga-ui-local';

.textfield();

:host {
    ::ng-deep input {
        // @note: need for listen (transitionstart) event
        // don't use more than one listener property
        transition: box-shadow 0.01s;
    }

    &._autofilled {
        &[data-size='s'] .t-placeholder,
        &._label-outside .t-placeholder,
        .t-value-decoration:not(.t-has-value) {
            visibility: hidden;
        }
    }

    &[data-size='s'] tui-icon::after {
        font-size: 1rem;
    }
}

.t-custom-content {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    min-inline-size: 2rem;
    block-size: 2rem;
    pointer-events: none;
}

.t-custom-icon {
    font-size: 2rem;
    block-size: 100%;
}

.t-input {
    &:not(:first-child) {
        display: none;
    }

    :host[data-size] &_template {
        display: flex;
        inline-size: calc(100% - 1rem);
        max-inline-size: calc(100% - 1rem);
        align-items: center;
        pointer-events: none;
        padding-inline-end: 0;
    }

    &_template_hidden {
        display: none;
    }
}

.t-text-template {
    .text-overflow();
}

.t-wrapper-value-decoration {
    position: relative;
    pointer-events: none;
}

:host._readonly .t-textfield-icon ::ng-deep [tuiAppearance][data-appearance='icon'] {
    pointer-events: none;
}

@media @tui-mouse {
    :host:not(._readonly):not(._disabled):hover
        .t-textfield-icon
        ::ng-deep
        [tuiAppearance][data-appearance='icon']::after {
        color: var(--tui-text-secondary);
    }
}

.t-cleaner tui-icon::after {
    font-size: 1rem;
}
