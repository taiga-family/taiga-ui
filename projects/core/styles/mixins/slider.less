@thumb-diameters: {
    @s: 0.5rem;
    @m: 0.75rem;
    @l: 0.75rem;
};

// TODO(v5): use `l` by default (default size for new textfields)
.tui-slider-ticks-labels(@input-size: m) {
    @thumb: @thumb-diameters[@@input-size];

    --t-offset: calc(@thumb / 2);

    display: flex;
    font: var(--tui-font-text-s);
    margin-inline-start: var(--t-offset);
    margin-inline-end: var(--t-offset);

    & > * {
        position: relative;
        flex: 2;
        text-align: center;

        &:first-child {
            left: calc(-1 * var(--t-offset));
            inset-inline-start: calc(-1 * var(--t-offset));
            flex: 1;
            text-align: start;
        }

        &:last-child {
            right: calc(-1 * var(--t-offset));
            flex: 1;
            text-align: end;

            @supports (inset-inline-end: 0) {
                right: unset;
                inset-inline-end: calc(-1 * var(--t-offset));
            }
        }
    }

    /* TODO(v5): delete */
    tui-input-slider + & {
        margin-inline-start: calc(var(--tui-radius-m) / 2 + var(--t-offset));
    }

    /* TODO: add :has([tuiInputSlider]) */
    tui-textfield + & {
        --t-offset: calc(var(--tui-radius-m) / 2 + @thumb / 2);
    }

    /* TODO: add :has([tuiInputSlider]) */
    tui-textfield[data-size='l'] + & {
        --t-offset: calc(var(--tui-radius-l) / 2 + @thumb / 2);
    }

    tui-input-range + &,
    tui-range + & {
        --t-offset: @thumb;
    }
}
