name: ⚠️ Create release
on:
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        description: release type
        required: true
        default: 'minor'
        options:
          - patch
          - minor
          - prerelease
          - major

jobs:
  run-release:
    name: Run release
    runs-on: ubuntu-latest
    env:
      IS_RRE_RELEASE_MODE: ${{ contains(github.event.inputs.mode, 'prerelease') }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}
      - uses: taiga-family/ci/actions/setup/node@v1.112.0
      - uses: taiga-family/ci/actions/setup/config/git@v1.112.0
        with:
          token: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}

      - name: Run release
        id: run-release
        run: |
          npx ts-node ./scripts/release.ts --ci-mode --release-as ${{ github.event.inputs.mode }}
          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate Release Body
        if: ${{ env.IS_RRE_RELEASE_MODE == 'false' }}
        id: generate_body
        run: |
          npx extract-changelog-release > RELEASE_BODY.md
          echo "tag_name=$(git describe --abbrev=0 --tags)" >> $GITHUB_OUTPUT

      - id: get-pr-body
        if: ${{ env.IS_RRE_RELEASE_MODE == 'false' }}
        run: |
          body=$(cat RELEASE_BODY.md)
          delimiter="$(openssl rand -hex 8)"
          echo "body<<$delimiter" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          delete-branch: true
          token: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}
          branch: release/${{ steps.run-release.outputs.new_version }}
          title: '🚀 Release/v${{ steps.run-release.outputs.new_version }}'
          body: |
            ${{ steps.get-pr-body.outputs.body }}

            ---

            > **DO NOT SQUASH OR REBASE ME**

            > if user merges this PR via rebasing or using squash, it will cause lost of the tag. It happens because tag is already
            > attached to the initial release commit SHA. If we use rebase or squash, the commit sha changes and already created tag
            > points to not-existing commit.

      - name: Create GitHub Release
        if: ${{ env.IS_RRE_RELEASE_MODE == 'false' }}
        uses: ncipollo/release-action@v1.15.0
        with:
          name: Release ${{ steps.generate_body.outputs.tag_name }}
          tag: ${{ steps.generate_body.outputs.tag_name }}
          commit: ${{ github.head_ref || github.ref_name }}
          bodyFile: 'RELEASE_BODY.md'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push tag
        run: git push origin tag v${{ steps.run-release.outputs.new_version }} || echo ""

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
