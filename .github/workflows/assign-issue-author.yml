name: ðŸ¤– Assign PR Closer to All Linked Issues
on:
  pull_request:
    types: [closed]

jobs:
  assign-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR was merged (optional)
        id: check-merge
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            echo "PR was merged, proceeding"
            echo "should_proceed=true" >> $GITHUB_OUTPUT
          else
            echo "PR was closed without merging, skipping"
            echo "should_proceed=false" >> $GITHUB_OUTPUT
          fi

      - name: Find ALL linked issues
        if: steps.check-merge.outputs.should_proceed == 'true'
        id: find-linked-issues
        uses: actions/github-script@v7
        with:
          script: |
            const { data: timelineEvents } = await github.rest.issues.listEventsForTimeline({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });

            const linkedIssues = [...new Set(
              timelineEvents
                .filter(event => event.event === 'cross-referenced')
                .filter(event => event.source && event.source.issue)
                .filter(event => event.source?.issue?.number)
                .map(event => event.source.issue.number)
            )];

            if (linkedIssues.length === 0) {
              console.log('No linked issues found.');

              return '[]';
            }

            console.log(`Found linked issues: ${linkedIssues.join(', ')}`);

            return JSON.stringify(linkedIssues);

      - name: Assign PR author to ALL linked issues
        if: steps.find-linked-issues.outputs.result != '[]' && steps.check-merge.outputs.should_proceed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumbers = JSON.parse('${{ steps.find-linked-issues.outputs.result }}');
            const prAuthor = context.payload.pull_request.user.login;

            console.log(`Assigning @${prAuthor} to issues: ${issueNumbers.join(', ')}`);

            await Promise.all(issueNumbers.map(async issueNumber => {
              try {
                await github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  assignees: [prAuthor],
                });

                console.log(`âœ“ Assigned to #${issueNumber}`);
              } catch (error) {
                console.error(`Failed to assign to #${issueNumber}: ${error.message}`);
              }
            }));
